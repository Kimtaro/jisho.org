<? use Dumper ?>
<a name="<? word.id ?>"></a>
<div id="word_<?- word.id -?>" class="word <?	if even; 'even'; else; 'odd';	end ?>">
	<!-- <? word.id ?> -->
	<div class="readings clearfix <?- if word.has_common -?>has_common<?- end -?>">
	<a href="#<?- word.id -?>">§</a>
	<? word = word.data ?>
		<?
			foreach group in word.reading_groups;
		?>
			<div class="reading_group">
			  <? foreach reading in group.readings; ?>
				  <span class="reading"><?- if reading.is_common; -?><sup class="common">Common</sup><?- end -?><span class="reading_text <?- if reading.is_common; -?>common<?- end -?>" xml:lang="jpn" lang="jpn"><? reading.reading | romaji(c.req.params.romaji) | html ?></span><?- if loop.count <= loop.max -?>・<?- end -?></span><?-
				end;
				if group.representations;
				-?><div class="representations"><?-
						foreach representation in group.representations;
						-?><?- if representation.is_common; -?><sup class="common">Common</sup><?- end -?><span class="representation <?- if representation.is_common; -?>common<?- end -?>" xml:lang="jpn" lang="jpn"><? representation.representation | romaji(c.req.params.romaji) | html ?></span><?- if loop.count <= loop.max -?>・<?- end;
							end -?></div><?-
					else
					-?>&#12288;<?-
				 	end
				-?></div>
		<? end ?>
	</div>

	<ol class="senses">
		<?
			foreach sense in word.senses;
				first_tag = 0;
				glosses = sense.glosses_for_language(c.stash.display_language);
				next if glosses.size == 0;
		?>
			<li class="sense">
  			<ul class="tags">
  				<? if sense.tags && sense.tags.size > 0 ?>
  					<li class="tag <? unless first_tag ?>first_tag<? end ?>"> 
  						<? foreach tag in sense.tags ?>
  							<?- c.loc('tag', tag.tag) -?><?- if loop.count <= loop.max -?>, <? end ?>
  						<? end ?>
  					</li>
  					<? first_tag = 1 ?>
  				<? end ?>
  				<? if sense.origins && sense.origins.size > 0 ?>
  					<li class="tag <? unless first_tag ?>first_tag<? end ?>">
  						<? foreach origin in sense.origins ?>
  							<? lang = origin.type ? '<span xml_lang="'_ origin.type _'" lang="'_ origin.type _'">' : '' ?>
  							From <? c.loc('language', origin.type) | ucfirst ?><? ' &#8220;' _ lang _ origin.value _ (lang ? '</span>' : '') _ '</span>&#8221;' if origin.value ?><?- if loop.count <= loop.max -?>, <? end ?>
  						<? end ?>
  					</li>
  					<? first_tag = 1 ?>
  				<? end ?>
  				<? if sense.details && sense.details.size > 0 ?>
  					<li class="tag <? unless first_tag ?>first_tag<? end ?>"> 
  						<? foreach detail in sense.details ?>
  							<? detail.value | ucfirst ?><?- if loop.count <= loop.max -?>, <? end ?>
  						<? end ?>
  					</li>
  					<? first_tag = 1 ?>
  				<? end ?>
  				  				
  			</ul>
				<? foreach gloss in glosses ?>
					<span class="gloss" xml:lang="<? gloss.type ?>" lang="<? gloss.type ?>"><? gloss.value | html ?></span><?- if loop.count <= loop.max -?><span class="between">;</span>&nbsp; <? end ?>
				<? end ?>
				
				<? if sense.restrs && sense.restrs.size > 0 ?>
					<span class="tag restrictions">
						<? foreach restriction in sense.restrs ?>
							<?- restriction.value -?><?- if loop.count <= loop.max -?>, <? end ?>
						<? end ?>
						only
					</span>
				<? end ?>
				<? if sense.crossrefs && sense.crossrefs.size > 0 ?>
			    <? crossrefs = [] ?>
			    <? antonyms = [] ?>
					<? foreach ref in sense.crossrefs ?>
					  <? if ref.tag == 'ant' ?>
					    <? antonyms.push(ref) ?>
					  <? else ?>
					    <? crossrefs.push(ref) ?>
					  <? end ?>
					<? end ?>
					<? if crossrefs.size > 0 ?>
				    <span class="tag references">
				      See
  					  <? foreach crossref in crossrefs ?>
  							<a href="<? c.uri_for('/words', {'japanese' => crossref.value, 'dict' => c.req.params.source}) ?>"><?- crossref.value -?></a><?- if loop.count <= loop.max -?>, <? end ?>
  					  <? end ?>
  					</span>
  				<? end ?>
  				<? if antonyms.size > 0 ?>
				    <span class="tag antonyms">
				      Opposite
  					  <? foreach antonym in antonyms ?>
  							<a href="<? c.uri_for('/words', {'japanese' => antonym.value, 'dict' => c.req.params.source}) ?>"><?- antonym.value -?></a><?- if loop.count <= loop.max -?>, <? end ?>
  					  <? end ?>
  					</span>
  				<? end ?>
				<? end ?>
				
			</li>
		<? end ?>
	</ol>
</div>